---
import NavBar from '@/components/nav/NavBar.astro';
import ProfileCard from '@/components/ProfileCard.vue';
import ImageSkeleton from '@/components/skeleton/Image.vue';
import { Image } from 'astro:assets';

interface Props {
  title: string;
  desc: string;
}

const { title, desc } = Astro.props;

const profile = {
  name: '官澔恩 / Alan Kuan',
  title: 'Lorem ipsum dolor',
  links: [
    {
      title: 'My Linkedin Profile',
      icon: 'linkedin',
      url: 'https://www.linkedin.com/in/alankuan945',
    },
    {
      title: 'My GitHub Profile',
      icon: 'github',
      url: 'https://github.com/Alan-Kuan',
    },
    {
      title: 'My YouTube Channel',
      icon: 'youtube',
      url: 'https://www.youtube.com/@alankuan',
    },
  ],
  email_b64: 'a3Vhbmhhb2FuQGdtYWlsLmNvbQ==',
  intro: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In in tristique libero. Morbi fermentum venenatis lectus sit amet mattis. Etiam non velit ac sapien finibus lobortis id et ex. Etiam venenatis vulputate neque, sed finibus nunc aliquet consectetur. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec egestas quis nisi quis tempor. Pellentesque eu lacinia justo.',
};

const avatar_urls = [
  'https://i.imgur.com/gKDCCEu.jpg',  // light
  'https://i.imgur.com/CkzXSKi.jpg',  // dark
];
---

<!doctype html>
<html lang="zh-Hant-TW">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={desc} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<title>{title}</title>
    <script is:inline>
      const light_mode = localStorage.getItem('light_mode');

      if (light_mode === 'false') {
        document.documentElement.classList.add('dark');
      }
    </script>
	</head>
	<body
    bg="body-light dark:body-dark"
    text="text-dark dark:text-light"
  >
    <NavBar />
    <div flex>
      <div w-25%>
        { /* add `top-20` and `bottom-0` to make `overflow-y-scroll` effective */ }
        <ProfileCard
          name={profile.name}
          title={profile.title}
          links={profile.links}
          email_b64={profile.email_b64}
          intro={profile.intro}
          class="fixed top-20 bottom-0 w-25%"
        >
          <div slot="img">
            {
              /* Remote image requires width/height so I chose 200 as default.
                 Later, the width is determined by the 'w-50' class. */
              avatar_urls.map((url, idx) =>
                <Image
                  src={url}
                  width="200" height="200"
                  alt="My Avatar"
                  decoding="async"
                  id={idx === 0 ? 'avatar' : 'avatar-dark'}
                  class:list={[
                    { 'dark:hidden': idx === 0 },
                    { 'hidden dark:block': idx === 1 },
                    'absolute', 'z-1',
                    'w-50',
                    'rounded-xl',
                    'text-center', 'text-text-dark', 'font-semibold',
                    'leading-16',
                  ]}
                />
              )
            }
            <ImageSkeleton id="skel-avatar" class="w-50 min-h-50 rounded-xl" />
          </div>
        </ProfileCard>
      </div>
      <div w-75% h-[calc(100vh-5rem)] overflow-y-scroll>
        <slot />
      </div>
    </div>
	</body>
</html>

<style is:global>
	html {
		font-family: system-ui, sans-serif;
	}
	code {
		font-family: monospace;
	}
</style>